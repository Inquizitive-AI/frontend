name: Deploy to Cloudflare Workers

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Cache node_modules for faster builds
      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Cache Next.js build cache
      - name: Cache Next.js build cache
        uses: actions/cache@v4
        with:
          path: .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/*.js', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-

      - name: Install dependencies
        run: npm ci

      - name: Build with OpenNext
        run: npm run cf-build

      # Production deploy (main branch)
      - name: Deploy to Cloudflare Workers (Production)
        if: github.ref == 'refs/heads/main'
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: npm run deploy

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Deploy to Cloudflare Workers (Preview) and comment URL
        if: github.ref != 'refs/heads/main'
        id: preview_deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          OUTPUT=$(npx wrangler versions upload 2>&1 | tee wrangler_output.txt)
          PREVIEW_URL=$(grep -oE 'https://[a-zA-Z0-9\.\-]+\.workers\.dev' wrangler_output.txt | head -n1)
          echo "PREVIEW_URL=$PREVIEW_URL" >> $GITHUB_ENV

      - name: Comment preview URL on PR
        if: github.ref != 'refs/heads/main' && github.event_name == 'pull_request'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PREVIEW_URL: ${{ env.PREVIEW_URL }}
          GITHUB_EVENT_PATH: ${{ github.event_path }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
            PR_NUMBER=$(jq --raw-output .number "$GITHUB_EVENT_PATH")
            COMMENT_BODY="âœ… **Preview Deployment Successful!**%0A[View your live preview here](${PREVIEW_URL})"
            curl -s -H "Authorization: token $GITHUB_TOKEN" \
                 -H "Content-Type: application/json" \
                 -d "{\"body\": \"$COMMENT_BODY\"}" \
                 "https://api.github.com/repos/${GITHUB_REPOSITORY}/issues/${PR_NUMBER}/comments"