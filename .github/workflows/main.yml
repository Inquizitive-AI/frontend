name: Deploy to Cloudflare Workers

on:
    push:
        branches: [main]

jobs:
    build-and-deploy:
        runs-on: blacksmith-4vcpu-ubuntu-2404

        steps:
            - uses: actions/checkout@v4

            # Cache node_modules for faster builds
            - uses: useblacksmith/cache@v5
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

            # Cache Next.js build cache
            - uses: useblacksmith/cache@v5
              with:
                  path: .next/cache
                  key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/*.js', '**/*.ts', '**/*.tsx') }}

            - name: Install dependencies
              run: npm ci

            - name: Build with OpenNext
              run: npm run cf-build

            - name: Deploy to Cloudflare Workers
              if: github.ref == 'refs/heads/main'
              env:
                  CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
                  CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
              run: npm run deploy

            - name: Cache jq binary
              id: cache-jq
              if: github.ref != 'refs/heads/main'
              uses: actions/cache@v4
              with:
                  path: ~/.local/bin/jq
                  key: jq-1.7

            - name: Download jq if not cached
              if: steps.cache-jq.outputs.cache-hit != 'true' && github.ref != 'refs/heads/main'
              run: |
                  mkdir -p ~/.local/bin
                  curl -L -o ~/.local/bin/jq https://github.com/jqlang/jq/releases/download/jq-1.7/jq-linux-amd64
                  chmod +x ~/.local/bin/jq

            - name: Add jq to PATH
              if: github.ref != 'refs/heads/main'
              run: echo "$HOME/.local/bin" >> $GITHUB_PATH

            - name: Deploy to Cloudflare Workers (Preview) and comment URL
              if: github.ref != 'refs/heads/main'
              id: preview_deploy
              env:
                  CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
                  CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
              run: |
                  OUTPUT=$(npx wrangler versions upload 2>&1 | tee wrangler_output.txt)
                  PREVIEW_URL=$(grep -oE 'https://[a-zA-Z0-9\.\-]+\.workers\.dev' wrangler_output.txt | head -n1)
                  echo "PREVIEW_URL=$PREVIEW_URL" >> $GITHUB_ENV

            - name: Comment preview URL on PR
              if: github.ref != 'refs/heads/main' && github.event_name == 'pull_request'
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  PREVIEW_URL: ${{ env.PREVIEW_URL }}
                  GITHUB_EVENT_PATH: ${{ github.event_path }}
                  GITHUB_REPOSITORY: ${{ github.repository }}
              run: |
                  PR_NUMBER=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
                  COMMENT_BODY="âœ… **Preview Deployment Successful!**  
                  [View your live preview here](${PREVIEW_URL})"
                  gh pr comment "$PR_NUMBER" --body "$COMMENT_BODY"
